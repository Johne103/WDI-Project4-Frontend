{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/main.js","js/models/product.js","js/controllers/products.js","js/router.js","js/models/tag.js","js/controllers/tags.js","js/models/user.js","js/controllers/users.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","MainController","$rootScope","logout","secureState","e","toState","main","message","console","log","isAuthenticated","protectedStates","includes","name","preventDefault","isLoggedIn","$on","Product","$resource","id","update","method","ProductsIndexController","productsShowsIndex","all","query","ProductsNewController","create","save","productsShowsNew","productsShow","ProductsShowController","deleteProduct","$remove","get","params","delete","ProductsEditController","usersEdit","$update","Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Tag","TagsIndexController","tagsIndex","TagsNewController","tagsNew","tag","TagsShowController","deleteTag","tagsShow","TagsEditController","tagsEdit","User","UsersIndexController","usersIndex","UsersNewController","usersNew","UsersShowController","deleteUser","usersShow","UsersEditController","angular","module","constant","config","$inject","factory"],"mappings":"YAKA,SAASA,MAAKC,EAAeC,GAC3BD,EAAcE,SAAcD,EAA5B,SACAD,EAAcG,UAAeF,EAA7B,YAEAD,EAAcI,YAAc,GCJ9B,QAASC,oBAAmBC,EAAOC,GAKjC,QAASC,KACPF,EAAMG,OAAOC,EAASC,MACnBC,KAAK,WACJL,EAAOM,GAAG,WAPhB,GAAMH,GAAWI,IAEjBJ,GAASC,QASTD,EAASF,OAASA,EAIpB,QAASO,iBAAgBT,EAAOC,GAK9B,QAASC,KACPF,EAAMU,MAAMA,EAAMC,aACfL,KAAK,WACJL,EAAOM,GAAG,gBAPhB,GAAMG,GAAQF,IAEdE,GAAMC,eASND,EAAMR,OAASA,EC7BjB,QAASU,gBAAeZ,EAAOC,EAAQY,GAMrC,QAASC,KACPd,EAAMc,SACLR,KAAK,WACJL,EAAOM,GAAG,gBAMd,QAASQ,GAAYC,EAAGC,GACtBC,EAAKC,QAAU,KACfC,QAAQC,IAAIJ,IACRjB,EAAMsB,mBAAqBC,EAAgBC,SAASP,EAAQQ,QAC9DT,EAAEU,iBACFzB,EAAOM,GAAG,SACVW,EAAKC,QAAU,sCApBnB,GAAMD,GAAOV,IAEbU,GAAKS,WAAa3B,EAAMsB,gBACxBJ,EAAKC,QAAU,IASf,IAAMI,IAAmB,YAAa,WAYtCV,GAAWe,IAAI,oBAAqBb,GAEpCG,EAAKJ,OAASA,EC3BhB,QAASe,SAAQC,EAAWnC,GAC1B,MAAO,IAAImC,GAAanC,EAAjB,iBAA2CoC,GAAI,QACpDC,QAAUC,OAAQ,SCCtB,QAASC,yBAAwBL,GAC/B,GAAMM,GAAqB3B,IAE3B2B,GAAmBC,IAAMP,EAAQQ,QAInC,QAASC,uBAAsBT,EAAS5B,GAKtC,QAASsC,KACPV,EAAQW,KAAKC,EAAiBC,aAAc,WAC1CzC,EAAOM,GAAG,wBANd,GAAMkC,GAAmBjC,IAEzBiC,GAAiBC,gBAQjBD,EAAiBF,OAASA,EAI5B,QAASI,wBAAuBd,EAAS5B,EAAQD,GAK/C,QAAS4C,KACPF,EAAaA,aAAaG,QAAQ,WAChC5C,EAAOM,GAAG,wBANd,GAAMmC,GAAelC,IAErBkC,GAAaA,aAAeb,EAAQiB,IAAI7C,EAAO8C,QAQ/CL,EAAaM,OAASJ,EACtBF,EAAaf,WAAa3B,EAAMsB,gBAIlC,QAAS2B,wBAAuBpB,EAAS5B,GAKvC,QAAS+B,KACPkB,EAAU7C,KAAK8C,QAAQ,WACrBlD,EAAOM,GAAG,YAAaN,EAAO8C,UANlC,GAAMG,GAAY1C,IAElB0C,GAAU7C,KAAOwB,EAAQiB,IAAI7C,EAAO8C,QAQpCvC,KAAKwB,OAASA,ECnDhB,QAASoB,QAAOC,EAAgBC,GAC9BD,EACGE,MAAM,cACLC,IAAK,SACLC,YAAa,6BACbC,WAAY,uCAEbH,MAAM,YACLC,IAAK,YACLC,YAAa,2BACbC,WAAY,mCAEbH,MAAM,SACLC,IAAK,SACLC,YAAa,wBACbC,WAAY,6BAEbH,MAAM,aACLC,IAAK,aACLC,YAAa,4BACbC,WAAY,qCAEbH,MAAM,aACLC,IAAK,kBACLC,YAAa,4BACbC,WAAY,qCAEbH,MAAM,iBACLC,IAAK,YACLC,YAAa,gCACbC,WAAY,6CACXH,MAAM,aACPC,IAAK,QACLC,YAAa,4BACbC,WAAY,qCAGhBJ,EAAmBK,UAAU,UCtC/B,QAASC,KAAI9B,EAAWnC,GACtB,MAAO,IAAImC,GAAanC,EAAjB,aAAuCoC,GAAI,QAChDC,QAAUC,OAAQ,SCCtB,QAAS4B,qBAAoBD,GAC3B,GAAME,GAAYtD,IAElBsD,GAAU1B,IAAMwB,EAAIvB,QAItB,QAAS0B,mBAAkBH,EAAK3D,GAK9B,QAASsC,KACPqB,EAAIpB,KAAKwB,EAAQC,IAAK,WACpBhE,EAAOM,GAAG,eANd,GAAMyD,GAAUxD,IAEhBwD,GAAQC,OAQRD,EAAQzB,OAASA,EAInB,QAAS2B,oBAAmBN,EAAK3D,EAAQD,GAKvC,QAASmE,KACPC,EAASH,IAAIpB,QAAQ,WACnB5C,EAAOM,GAAG,eANd,GAAM6D,GAAW5D,IAEjB4D,GAASH,IAAML,EAAId,IAAI7C,EAAO8C,QAQ9BqB,EAASpB,OAASmB,EAClBC,EAASzC,WAAa3B,EAAMsB,gBAI9B,QAAS+C,oBAAmBT,EAAK3D,GAK/B,QAAS+B,KACPsC,EAASL,IAAId,QAAQ,WACnBlD,EAAOM,GAAG,WAAYN,EAAO8C,UANjC,GAAMuB,GAAW9D,IAEjB8D,GAASL,IAAML,EAAId,IAAI7C,EAAO8C,QAQ9BvC,KAAKwB,OAASA,ECpDhB,QAASuC,MAAKzC,EAAWnC,GACvB,MAAO,IAAImC,GAAanC,EAAjB,cAAwCoC,GAAI,QACjDC,QAAUC,OAAQ,SCCtB,QAASuC,sBAAqBD,GAC5B,GAAME,GAAajE,IAEnBiE,GAAWrC,IAAMmC,EAAKlC,QAIxB,QAASqC,oBAAmBH,EAAMtE,GAKhC,QAASsC,KACPgC,EAAK/B,KAAKmC,EAAStE,KAAM,WACvBJ,EAAOM,GAAG,gBANd,GAAMoE,GAAWnE,IAEjBmE,GAAStE,QAQTsE,EAASpC,OAASA,EAIpB,QAASqC,qBAAoBL,EAAMtE,EAAQD,GAKzC,QAAS6E,KACPC,EAAUzE,KAAKwC,QAAQ,WACrB5C,EAAOM,GAAG,gBANd,GAAMuE,GAAYtE,IAElBsE,GAAUzE,KAAOkE,EAAKzB,IAAI7C,EAAO8C,QAQjC+B,EAAU9B,OAAS6B,EACnBC,EAAUnD,WAAa3B,EAAMsB,gBAI/B,QAASyD,qBAAoBR,EAAMtE,GAKjC,QAAS+B,KACPkB,EAAU7C,KAAK8C,QAAQ,WACrBlD,EAAOM,GAAG,YAAaN,EAAO8C,UANlC,GAAMG,GAAY1C,IAElB0C,GAAU7C,KAAOkE,EAAKzB,IAAI7C,EAAO8C,QAQjCvC,KAAKwB,OAASA,ETxDhBgD,QAAQC,OAAO,gBAAiB,aAAc,YAAa,eACxDC,SAAS,UAAW,6BACpBC,OAAO1F,MAEVA,KAAK2F,SAAW,gBAAiB,WCJjCJ,QAAQC,OAAO,gBACZvB,WAAW,qBAAsB3D,oBACjC2D,WAAW,kBAAmBjD,iBAEjCV,mBAAmBqF,SAAW,QAAS,UAgBvC3E,gBAAgB2E,SAAW,QAAS,UCpBpCJ,QAAQC,OAAO,gBACZvB,WAAW,iBAAkB9C,gBAEhCA,eAAewE,SAAW,QAAS,SAAU,cCH7CJ,QAAQC,OAAO,gBACZI,QAAQ,UAAWxD,SAEtBA,QAAQuD,SAAW,YAAa,WCHhCJ,QAAQC,OAAO,gBACZvB,WAAW,0BAA2BxB,yBACtCwB,WAAW,wBAAyBpB,uBACpCoB,WAAW,yBAA0Bf,wBACrCe,WAAW,yBAA0BT,wBAExCf,wBAAwBkD,SAAW,WAOnC9C,sBAAsB8C,SAAW,UAAW,UAe5CzC,uBAAuByC,SAAW,UAAW,SAAU,SAgBvDnC,uBAAuBmC,SAAW,UAAW,UC5C7CJ,QACGC,OAAO,gBACPE,OAAO/B,QAEVA,OAAOgC,SAAW,iBAAkB,sBCJpCJ,QAAQC,OAAO,gBACZI,QAAQ,MAAOzB,KAElBA,IAAIwB,SAAW,YAAa,WCH5BJ,QAAQC,OAAO,gBACZvB,WAAW,sBAAuBG,qBAClCH,WAAW,oBAAqBK,mBAChCL,WAAW,qBAAsBQ,oBACjCR,WAAW,qBAAsBW,oBAEpCR,oBAAoBuB,SAAW,OAO/BrB,kBAAkBqB,SAAW,MAAO,UAepClB,mBAAmBkB,SAAW,MAAO,SAAU,SAgB/Cf,mBAAmBe,SAAW,MAAO,UC5CrCJ,QAAQC,OAAO,gBACZI,QAAQ,OAAQd,MAEnBA,KAAKa,SAAW,YAAa,WCH7BJ,QAAQC,OAAO,gBACZvB,WAAW,uBAAwBc,sBACnCd,WAAW,qBAAsBgB,oBACjChB,WAAW,sBAAuBkB,qBAClClB,WAAW,sBAAuBqB,qBAErCP,qBAAqBY,SAAW,QAOhCV,mBAAmBU,SAAW,OAAQ,UAetCR,oBAAoBQ,SAAW,OAAQ,SAAU,SAgBjDL,oBAAoBK,SAAW,OAAQ","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('usersIndex');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('finalProject')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  const protectedStates = ['usersEdit', 'usersNew'];\n\n  function secureState(e, toState) {\n    main.message = null;\n    console.log(toState);\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You must be logged in to go there!';\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n","angular.module('finalProject')\n  .factory('Product', Product);\n\nProduct.$inject = ['$resource', 'API_URL'];\nfunction Product($resource, API_URL) {\n  return new $resource(`${API_URL}/products/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('ProductsIndexController', ProductsIndexController)\n  .controller('ProductsNewController', ProductsNewController)\n  .controller('ProductsShowController', ProductsShowController)\n  .controller('ProductsEditController', ProductsEditController);\n\nProductsIndexController.$inject = ['Product'];\nfunction ProductsIndexController(Product) {\n  const productsShowsIndex = this;\n\n  productsShowsIndex.all = Product.query();\n}\n\nProductsNewController.$inject = ['Product', '$state'];\nfunction ProductsNewController(Product, $state) {\n  const productsShowsNew = this;\n\n  productsShowsNew.productsShow = {};\n\n  function create() {\n    Product.save(productsShowsNew.productsShow, () => {\n      $state.go('productsShowsIndex');\n    });\n  }\n\n  productsShowsNew.create = create;\n}\n\nProductsShowController.$inject = ['Product', '$state', '$auth'];\nfunction ProductsShowController(Product, $state, $auth) {\n  const productsShow = this;\n\n  productsShow.productsShow = Product.get($state.params);\n\n  function deleteProduct() {\n    productsShow.productsShow.$remove(() => {\n      $state.go('productsShowsIndex');\n    });\n  }\n\n  productsShow.delete = deleteProduct;\n  productsShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nProductsEditController.$inject = ['Product', '$state'];\nfunction ProductsEditController(Product, $state) {\n  const usersEdit = this;\n\n  usersEdit.user = Product.get($state.params);\n\n  function update() {\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n","angular\n  .module('finalProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('usersShow', {\n      url: '/users/:id',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    })\n    .state('productsIndex', {\n      url: '/products',\n      templateUrl: '/templates/productsIndex.html',\n      controller: 'ProductsIndexController as productsIndex'\n    }).state('tagsIndex', {\n      url: '/tags',\n      templateUrl: '/templates/tagsIndex.html',\n      controller: 'TagsIndexController as tagsIndex'\n    });\n\n  $urlRouterProvider.otherwise('/users');\n}\n","angular.module('finalProject')\n  .factory('Tag', Tag);\n\nTag.$inject = ['$resource', 'API_URL'];\nfunction Tag($resource, API_URL) {\n  return new $resource(`${API_URL}/tags/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('TagsIndexController', TagsIndexController)\n  .controller('TagsNewController', TagsNewController)\n  .controller('TagsShowController', TagsShowController)\n  .controller('TagsEditController', TagsEditController);\n\nTagsIndexController.$inject = ['Tag'];\nfunction TagsIndexController(Tag) {\n  const tagsIndex = this;\n\n  tagsIndex.all = Tag.query();\n}\n\nTagsNewController.$inject = ['Tag', '$state'];\nfunction TagsNewController(Tag, $state) {\n  const tagsNew = this;\n\n  tagsNew.tag = {};\n\n  function create() {\n    Tag.save(tagsNew.tag, () => {\n      $state.go('tagsIndex');\n    });\n  }\n\n  tagsNew.create = create;\n}\n\nTagsShowController.$inject = ['Tag', '$state', '$auth'];\nfunction TagsShowController(Tag, $state, $auth) {\n  const tagsShow = this;\n\n  tagsShow.tag = Tag.get($state.params);\n\n  function deleteTag() {\n    tagsShow.tag.$remove(() => {\n      $state.go('tagsIndex');\n    });\n  }\n\n  tagsShow.delete = deleteTag;\n  tagsShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nTagsEditController.$inject = ['Tag', '$state'];\nfunction TagsEditController(Tag, $state) {\n  const tagsEdit = this;\n\n  tagsEdit.tag = Tag.get($state.params);\n\n  function update() {\n    tagsEdit.tag.$update(() => {\n      $state.go('tagsShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UsersNewController', UsersNewController)\n  .controller('UsersShowController', UsersShowController)\n  .controller('UsersEditController', UsersEditController);\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n}\n\nUsersNewController.$inject = ['User', '$state'];\nfunction UsersNewController(User, $state) {\n  const usersNew = this;\n\n  usersNew.user = {};\n\n  function create() {\n    User.save(usersNew.user, () => {\n      $state.go('usersIndex');\n    });\n  }\n\n  usersNew.create = create;\n}\n\nUsersShowController.$inject = ['User', '$state', '$auth'];\nfunction UsersShowController(User, $state, $auth) {\n  const usersShow = this;\n\n  usersShow.user = User.get($state.params);\n\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  usersShow.delete = deleteUser;\n  usersShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nUsersEditController.$inject = ['User', '$state'];\nfunction UsersEditController(User, $state) {\n  const usersEdit = this;\n\n  usersEdit.user = User.get($state.params);\n\n  function update() {\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n"]}