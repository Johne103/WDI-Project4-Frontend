{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/directives/googleMap.js","js/controllers/main.js","js/models/product.js","js/controllers/products.js","js/router.js","js/models/tag.js","js/controllers/tags.js","js/models/user.js","js/controllers/users.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","googleMap","$window","restrict","replace","template","scope","center","link","$scope","element","map","google","maps","Map","zoom","Marker","position","animation","Animation","DROP","MainController","$rootScope","logout","secureState","e","toState","main","message","isAuthenticated","protectedStates","includes","name","preventDefault","addToSelectedProducts","product","selectedList","push","console","log","isLoggedIn","$on","Product","$resource","id","update","method","ProductsIndexController","productIndex","all","query","ProductsNewController","create","save","productsShowsNew","productsShow","ProductsShowController","deleteProduct","$remove","get","params","delete","ProductsEditController","productsEdit","$update","Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Tag","TagsIndexController","tagsIndex","TagsNewController","tagsNew","tag","TagsShowController","deleteTag","tagsShow","TagsEditController","tagsEdit","User","UsersIndexController","usersIndex","UsersNewController","usersNew","UsersShowController","deleteUser","usersShow","UsersEditController","usersEdit","angular","module","constant","config","$inject","directive","factory"],"mappings":"YAKA,SAASA,MAAKC,EAAeC,GAC3BD,EAAcE,SAAcD,EAA5B,SACAD,EAAcG,UAAeF,EAA7B,YAEAD,EAAcI,YAAc,GCJ9B,QAASC,oBAAmBC,EAAOC,GAKjC,QAASC,KACPF,EAAMG,OAAOC,EAASC,MACnBC,KAAK,WACJL,EAAOM,GAAG,WAPhB,GAAMH,GAAWI,IAEjBJ,GAASC,QASTD,EAASF,OAASA,EAIpB,QAASO,iBAAgBT,EAAOC,GAK9B,QAASC,KACPF,EAAMU,MAAMA,EAAMC,aACfL,KAAK,WACJL,EAAOM,GAAG,gBAPhB,GAAMG,GAAQF,IAEdE,GAAMC,eASND,EAAMR,OAASA,EC7BjB,QAASU,WAAUC,GACjB,OACEC,SAAU,IACVC,SAAS,EACTC,SAAU,0CACVC,OACEC,OAAQ,KAEVC,KAAM,SAASC,EAAQC,GACrB,GAAMC,GAAM,GAAIT,GAAQU,OAAOC,KAAKC,IAAIJ,EAAQ,IAC9CH,OAAQE,EAAOF,OACfQ,KAAM,IAGR,IAAIb,GAAQU,OAAOC,KAAKG,QACtBC,SAAUR,EAAOF,OACjBI,IAAKA,EACLO,UAAWhB,EAAQU,OAAOC,KAAKM,UAAUC,SChBjD,QAASC,gBAAehC,EAAOC,EAAQgC,GAMrC,QAASC,KACPlC,EAAMkC,SACL5B,KAAK,WACJL,EAAOM,GAAG,gBAMd,QAAS4B,GAAYC,EAAGC,GACtBC,EAAKC,QAAU,MAEXvC,EAAMwC,mBAAqBC,EAAgBC,SAASL,EAAQM,QAC9DP,EAAEQ,iBACF3C,EAAOM,GAAG,SACV+B,EAAKC,QAAU,sCAUnB,QAASM,GAAsBC,GAC7BR,EAAKS,aAAaC,KAAKF,GACvBG,QAAQC,IAAI,WAAYZ,EAAKS,cAhC/B,GAAMT,GAAO9B,IAEb8B,GAAKa,WAAanD,EAAMwC,gBACxBF,EAAKC,QAAU,IASf,IAAME,IAAmB,YAAa,WAYtCR,GAAWmB,IAAI,oBAAqBjB,GAEpCG,EAAKJ,OAASA,EAEdI,EAAKS,gBAMLT,EAAKO,sBAAwBA,ECpC/B,QAASQ,SAAQC,EAAW3D,GAC1B,MAAO,IAAI2D,GAAa3D,EAAjB,iBAA2C4D,GAAI,QACpDC,QAAUC,OAAQ,SCItB,QAASC,yBAAwBL,GAC/B,GAAMM,GAAenD,IAErBmD,GAAaC,IAAMP,EAAQQ,QAI7B,QAASC,uBAAsBT,EAASpD,GAKtC,QAAS8D,KACPV,EAAQW,KAAKC,EAAiBC,aAAc,WAC1CjE,EAAOM,GAAG,kBANd,GAAM0D,GAAmBzD,IAEzByD,GAAiBC,gBAQjBD,EAAiBF,OAASA,EAI5B,QAASI,wBAAuBd,EAASpD,EAAQD,GAK/C,QAASoE,KACPF,EAAapB,QAAQuB,QAAQ,WAC3BpE,EAAOM,GAAG,kBANd,GAAM2D,GAAe1D,IAErB0D,GAAapB,QAAUO,EAAQiB,IAAIrE,EAAOsE,QAQ1CL,EAAaM,OAASJ,EACtBF,EAAaf,WAAanD,EAAMwC,gBAIlC,QAASiC,wBAAuBpB,EAASpD,GAKvC,QAASuD,KACPkB,EAAa5B,QAAQ6B,QAAQ,WAC3B1E,EAAOM,GAAG,eAAgBN,EAAOsE,UANrC,GAAMG,GAAelE,IAErBkE,GAAa5B,QAAUO,EAAQiB,IAAIrE,EAAOsE,QAQ1C/D,KAAKgD,OAASA,ECtDhB,QAASoB,QAAOC,EAAgBC,GAC9BD,EACGE,MAAM,QACLC,IAAK,IACLC,YAAa,uBACbC,WAAY,2BAEbH,MAAM,cACLC,IAAK,SACLC,YAAa,6BACbC,WAAY,uCAEbH,MAAM,YACLC,IAAK,YACLC,YAAa,2BACbC,WAAY,mCAEbH,MAAM,SACLC,IAAK,SACLC,YAAa,wBACbC,WAAY,6BAEbH,MAAM,gBACLC,IAAK,kBACLC,YAAa,iCAEdF,MAAM,aACLC,IAAK,aACLC,YAAa,4BACbC,WAAY,qCAEbH,MAAM,aACLC,IAAK,kBACLC,YAAa,4BACbC,WAAY,qCAEbH,MAAM,iBACLC,IAAK,YACLC,YAAa,gCACbC,WAAY,6CAEbH,MAAM,uBACLC,IAAK,YACLC,YAAa,sCACbC,WAAY,yDAEbH,MAAM,eACLC,IAAK,gBACLC,YAAa,8BACbC,WAAY,yCAEbH,MAAM,gBACLC,IAAK,gBACLC,YAAa,+BACbC,WAAY,2CAEbH,MAAM,gBACLC,IAAK,qBACLC,YAAa,+BACbC,WAAY,2CAEbH,MAAM,aACLC,IAAK,QACLC,YAAa,4BACbC,WAAY,qCAEbH,MAAM,YACLC,IAAK,YACLC,YAAa,2BACbC,WAAY,mCAEbH,MAAM,YACLC,IAAK,iBACLC,YAAa,2BACbC,WAAY,mCAGhBJ,EAAmBK,UAAU,UC9E/B,QAASC,KAAI9B,EAAW3D,GACtB,MAAO,IAAI2D,GAAa3D,EAAjB,aAAuC4D,GAAI,QAChDC,QAAUC,OAAQ,SCCtB,QAAS4B,qBAAoBD,GAC3B,GAAME,GAAY9E,IAElB8E,GAAU1B,IAAMwB,EAAIvB,QAItB,QAAS0B,mBAAkBH,EAAKnF,GAK9B,QAAS8D,KACPqB,EAAIpB,KAAKwB,EAAQC,IAAK,WACpBxF,EAAOM,GAAG,eANd,GAAMiF,GAAUhF,IAEhBgF,GAAQC,OAQRD,EAAQzB,OAASA,EAInB,QAAS2B,oBAAmBN,EAAKnF,EAAQD,GAKvC,QAAS2F,KACPC,EAASH,IAAIpB,QAAQ,WACnBpE,EAAOM,GAAG,eANd,GAAMqF,GAAWpF,IAEjBoF,GAASH,IAAML,EAAId,IAAIrE,EAAOsE,QAQ9BqB,EAASpB,OAASmB,EAClBC,EAASzC,WAAanD,EAAMwC,gBAI9B,QAASqD,oBAAmBT,EAAKnF,GAK/B,QAASuD,KACPsC,EAASL,IAAId,QAAQ,WACnB1E,EAAOM,GAAG,WAAYN,EAAOsE,UANjC,GAAMuB,GAAWtF,IAEjBsF,GAASL,IAAML,EAAId,IAAIrE,EAAOsE,QAQ9B/D,KAAKgD,OAASA,ECpDhB,QAASuC,MAAKzC,EAAW3D,GACvB,MAAO,IAAI2D,GAAa3D,EAAjB,cAAwC4D,GAAI,QACjDC,QAAUC,OAAQ,SCEtB,QAASuC,sBAAqBD,GAC5B,GAAME,GAAazF,IAEnByF,GAAWrC,IAAMmC,EAAKlC,QAIxB,QAASqC,oBAAmBH,EAAM9F,GAKhC,QAAS8D,KACPgC,EAAK/B,KAAKmC,EAAS9F,KAAM,WACvBJ,EAAOM,GAAG,gBANd,GAAM4F,GAAW3F,IAEjB2F,GAAS9F,QAQT8F,EAASpC,OAASA,EAIpB,QAASqC,qBAAoBL,EAAM9F,EAAQD,GAKzC,QAASqG,KACPC,EAAUjG,KAAKgE,QAAQ,WACrBpE,EAAOM,GAAG,gBANd,GAAM+F,GAAY9F,IAElB8F,GAAUjG,KAAO0F,EAAKzB,IAAIrE,EAAOsE,QAQjC+B,EAAU9B,OAAS6B,EACnBC,EAAUnD,WAAanD,EAAMwC,gBAI/B,QAAS+D,qBAAoBR,EAAM9F,GAIjC,QAASuD,KACPP,QAAQC,IAAIsD,EAAUnG,MACtBmG,EAAUnG,KAAKsE,QAAQ,WACrB1E,EAAOM,GAAG,YAAaN,EAAOsE,UANlC,GAAMiC,GAAYhG,IAElBgG,GAAUnG,KAAO0F,EAAKzB,IAAIrE,EAAOsE,QAQjC/D,KAAKgD,OAASA,EVzDhBiD,QAAQC,OAAO,gBAAiB,aAAc,YAAa,eACxDC,SAAS,UAAW,6BACpBC,OAAOnH,MAEVA,KAAKoH,SAAW,gBAAiB,WCJjCJ,QAAQC,OAAO,gBACZxB,WAAW,qBAAsBnF,oBACjCmF,WAAW,kBAAmBzE,iBAEjCV,mBAAmB8G,SAAW,QAAS,UAgBvCpG,gBAAgBoG,SAAW,QAAS,UCpBpCJ,QAAQC,OAAO,gBACbI,UAAU,YAAalG,WAEzBA,UAAUiG,SAAW,WCHrBJ,QAAQC,OAAO,gBACZxB,WAAW,iBAAkBlD,gBAGhCA,eAAe6E,SAAW,QAAS,SAAU,cCJ7CJ,QAAQC,OAAO,gBACZK,QAAQ,UAAW1D,SAEtBA,QAAQwD,SAAW,YAAa,WCHhCJ,QAAQC,OAAO,gBACZxB,WAAW,0BAA2BxB,yBACtCwB,WAAW,wBAAyBpB,uBACpCoB,WAAW,yBAA0Bf,wBACrCe,WAAW,yBAA0BT,wBAKxCf,wBAAwBmD,SAAW,WAOnC/C,sBAAsB+C,SAAW,UAAW,UAe5C1C,uBAAuB0C,SAAW,UAAW,SAAU,SAgBvDpC,uBAAuBoC,SAAW,UAAW,UC/C7CJ,QACGC,OAAO,gBACPE,OAAOhC,QAEVA,OAAOiC,SAAW,iBAAkB,sBCJpCJ,QAAQC,OAAO,gBACZK,QAAQ,MAAO3B,KAElBA,IAAIyB,SAAW,YAAa,WCH5BJ,QAAQC,OAAO,gBACZxB,WAAW,sBAAuBG,qBAClCH,WAAW,oBAAqBK,mBAChCL,WAAW,qBAAsBQ,oBACjCR,WAAW,qBAAsBW,oBAEpCR,oBAAoBwB,SAAW,OAO/BtB,kBAAkBsB,SAAW,MAAO,UAepCnB,mBAAmBmB,SAAW,MAAO,SAAU,SAgB/ChB,mBAAmBgB,SAAW,MAAO,UC5CrCJ,QAAQC,OAAO,gBACZK,QAAQ,OAAQhB,MAEnBA,KAAKc,SAAW,YAAa,WCH7BJ,QAAQC,OAAO,gBACZxB,WAAW,uBAAwBc,sBACnCd,WAAW,qBAAsBgB,oBACjChB,WAAW,sBAAuBkB,qBAClClB,WAAW,sBAAuBqB,qBAGrCP,qBAAqBa,SAAW,QAOhCX,mBAAmBW,SAAW,OAAQ,UAetCT,oBAAoBS,SAAW,OAAQ,SAAU,SAgBjDN,oBAAoBM,SAAW,OAAQ","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer' ])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('usersIndex');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('finalProject')\n .directive('googleMap', googleMap);\n\ngoogleMap.$inject = ['$window'];\nfunction googleMap($window) {\n  return {\n    restrict: 'E',\n    replace: true,\n    template: '<div class=\"google-map\">GMAP HERE</div>',\n    scope: {\n      center: '='\n    },\n    link: function($scope, element) {\n      const map = new $window.google.maps.Map(element[0], {\n        center: $scope.center,\n        zoom: 14\n      });\n\n      new $window.google.maps.Marker({\n        position: $scope.center,\n        map: map,\n        animation: $window.google.maps.Animation.DROP\n      });\n    }\n  };\n}\n","angular.module('finalProject')\n  .controller('MainController', MainController)\n  ;\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  const protectedStates = ['usersEdit', 'usersNew'];\n\n  function secureState(e, toState) {\n    main.message = null;\n    // console.log(toState);\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You must be logged in to go there!';\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n\n  main.selectedList = [];\n  // user selected prod list\n  function addToSelectedProducts(product) {\n    main.selectedList.push(product);\n    console.log('Basket: ', main.selectedList);\n  }\n  main.addToSelectedProducts = addToSelectedProducts;\n\n}\n","angular.module('finalProject')\n  .factory('Product', Product);\n\nProduct.$inject = ['$resource', 'API_URL'];\nfunction Product($resource, API_URL) {\n  return new $resource(`${API_URL}/products/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('ProductsIndexController', ProductsIndexController)\n  .controller('ProductsNewController', ProductsNewController)\n  .controller('ProductsShowController', ProductsShowController)\n  .controller('ProductsEditController', ProductsEditController);\n  // .controller('ProductsPickedIndexController', ProductsPickedIndexController);\n\n\n\nProductsIndexController.$inject = ['Product'];\nfunction ProductsIndexController(Product) {\n  const productIndex = this;\n\n  productIndex.all = Product.query();\n}\n\nProductsNewController.$inject = ['Product', '$state'];\nfunction ProductsNewController(Product, $state) {\n  const productsShowsNew = this;\n\n  productsShowsNew.productsShow = {};\n\n  function create() {\n    Product.save(productsShowsNew.productsShow, () => {\n      $state.go('productIndex');\n    });\n  }\n\n  productsShowsNew.create = create;\n}\n\nProductsShowController.$inject = ['Product', '$state', '$auth'];\nfunction ProductsShowController(Product, $state, $auth) {\n  const productsShow = this;\n\n  productsShow.product = Product.get($state.params);\n\n  function deleteProduct() {\n    productsShow.product.$remove(() => {\n      $state.go('productIndex');\n    });\n  }\n\n  productsShow.delete = deleteProduct;\n  productsShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nProductsEditController.$inject = ['Product', '$state'];\nfunction ProductsEditController(Product, $state) {\n  const productsEdit = this;\n\n  productsEdit.product = Product.get($state.params);\n\n  function update() {\n    productsEdit.product.$update(() => {\n      $state.go('productsShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n\n// ProductsPickedIndexController.$inject = ['Product', '$auth', 'User'];\n// function ProductsPickedIndexController(Product, $auth, User) {\n//   const productsPickedIndex = this;\n//   productsPickedIndex.productPicks = [];\n//   // console.log($auth.getPayload());\n//   User.get({id: $auth.getPayload()._id}, (user) => {\n//     productsPickedIndex.user = user;\n//   });\n// }\n","angular\n  .module('finalProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('home', {\n      url: '/',\n      templateUrl: '/templates/home.html',\n      controller: 'MainController as home'\n    })\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('usersProduct', {\n      url: '/users/products',\n      templateUrl: '/templates/usersProduct.html'\n    })\n    .state('usersShow', {\n      url: '/users/:id',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    })\n    .state('productsIndex', {\n      url: '/products',\n      templateUrl: '/templates/productsIndex.html',\n      controller: 'ProductsIndexController as productsIndex'\n    })\n    .state('productsPickedIndex', {\n      url: '/products',\n      templateUrl: '/templates/productsPickedIndex.html',\n      controller: 'ProductsPickedIndexController as productsPickedIndex'\n    })\n    .state('productsNew', {\n      url: '/products/New',\n      templateUrl: '/templates/productsNew.html',\n      controller: 'ProductsNewController as productsNew'\n    })\n    .state('productsShow', {\n      url: '/products/:id',\n      templateUrl: '/templates/productsShow.html',\n      controller: 'ProductsShowController as productsShow'\n    })\n    .state('productsEdit', {\n      url: '/products/:id/edit',\n      templateUrl: '/templates/productsEdit.html',\n      controller: 'ProductsEditController as productsEdit'\n    })\n    .state('tagsIndex', {\n      url: '/tags',\n      templateUrl: '/templates/tagsIndex.html',\n      controller: 'TagsIndexController as tagsIndex'\n    })\n    .state('tagsShow', {\n      url: '/tags/:id',\n      templateUrl: '/templates/tagsShow.html',\n      controller: 'TagsShowController as tagsShow'\n    })\n    .state('tagsEdit', {\n      url: '/tags/:id/edit',\n      templateUrl: '/templates/tagsEdit.html',\n      controller: 'TagsEditController as tagsEdit'\n    });\n\n  $urlRouterProvider.otherwise('/users');\n}\n","angular.module('finalProject')\n  .factory('Tag', Tag);\n\nTag.$inject = ['$resource', 'API_URL'];\nfunction Tag($resource, API_URL) {\n  return new $resource(`${API_URL}/tags/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('TagsIndexController', TagsIndexController)\n  .controller('TagsNewController', TagsNewController)\n  .controller('TagsShowController', TagsShowController)\n  .controller('TagsEditController', TagsEditController);\n\nTagsIndexController.$inject = ['Tag'];\nfunction TagsIndexController(Tag) {\n  const tagsIndex = this;\n\n  tagsIndex.all = Tag.query();\n}\n\nTagsNewController.$inject = ['Tag', '$state'];\nfunction TagsNewController(Tag, $state) {\n  const tagsNew = this;\n\n  tagsNew.tag = {};\n\n  function create() {\n    Tag.save(tagsNew.tag, () => {\n      $state.go('tagsIndex');\n    });\n  }\n\n  tagsNew.create = create;\n}\n\nTagsShowController.$inject = ['Tag', '$state', '$auth'];\nfunction TagsShowController(Tag, $state, $auth) {\n  const tagsShow = this;\n\n  tagsShow.tag = Tag.get($state.params);\n\n  function deleteTag() {\n    tagsShow.tag.$remove(() => {\n      $state.go('tagsIndex');\n    });\n  }\n\n  tagsShow.delete = deleteTag;\n  tagsShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nTagsEditController.$inject = ['Tag', '$state'];\nfunction TagsEditController(Tag, $state) {\n  const tagsEdit = this;\n\n  tagsEdit.tag = Tag.get($state.params);\n\n  function update() {\n    tagsEdit.tag.$update(() => {\n      $state.go('tagsShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UsersNewController', UsersNewController)\n  .controller('UsersShowController', UsersShowController)\n  .controller('UsersEditController', UsersEditController);\n\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n}\n\nUsersNewController.$inject = ['User', '$state'];\nfunction UsersNewController(User, $state) {\n  const usersNew = this;\n\n  usersNew.user = {};\n\n  function create() {\n    User.save(usersNew.user, () => {\n      $state.go('usersIndex');\n    });\n  }\n\n  usersNew.create = create;\n}\n\nUsersShowController.$inject = ['User', '$state', '$auth'];\nfunction UsersShowController(User, $state, $auth) {\n  const usersShow = this;\n\n  usersShow.user = User.get($state.params);\n\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  usersShow.delete = deleteUser;\n  usersShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nUsersEditController.$inject = ['User', '$state'];\nfunction UsersEditController(User, $state) {\n  const usersEdit = this;\n\n  usersEdit.user = User.get($state.params);\n  function update() {\n    console.log(usersEdit.user);\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n"]}