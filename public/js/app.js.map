{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/main.js","js/models/product.js","js/controllers/products.js","js/router.js","js/models/tag.js","js/controllers/tags.js","js/models/user.js","js/controllers/users.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","MainController","$rootScope","logout","secureState","e","toState","main","message","isAuthenticated","protectedStates","includes","name","preventDefault","isLoggedIn","$on","Product","$resource","id","update","method","ProductsIndexController","productIndex","all","query","ProductsNewController","create","save","productsShowsNew","productsShow","ProductsShowController","deleteProduct","product","$remove","get","params","delete","ProductsEditController","productsEdit","$update","ProductsPickedIndexController","User","productsPickedIndex","productPicks","getPayload","_id","Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Tag","TagsIndexController","tagsIndex","TagsNewController","tagsNew","tag","TagsShowController","deleteTag","tagsShow","TagsEditController","tagsEdit","UsersIndexController","usersIndex","UsersNewController","usersNew","UsersShowController","deleteUser","usersShow","UsersEditController","console","log","usersEdit","UsersProductController","$scope","isPick","usersProduct","toggle","idx","findIndex","productId","splice","push","angular","module","constant","config","$inject","factory"],"mappings":"YAKA,SAASA,MAAKC,EAAeC,GAC3BD,EAAcE,SAAcD,EAA5B,SACAD,EAAcG,UAAeF,EAA7B,YAEAD,EAAcI,YAAc,GCJ9B,QAASC,oBAAmBC,EAAOC,GAKjC,QAASC,KACPF,EAAMG,OAAOC,EAASC,MACnBC,KAAK,WACJL,EAAOM,GAAG,WAPhB,GAAMH,GAAWI,IAEjBJ,GAASC,QASTD,EAASF,OAASA,EAIpB,QAASO,iBAAgBT,EAAOC,GAK9B,QAASC,KACPF,EAAMU,MAAMA,EAAMC,aACfL,KAAK,WACJL,EAAOM,GAAG,gBAPhB,GAAMG,GAAQF,IAEdE,GAAMC,eASND,EAAMR,OAASA,EC7BjB,QAASU,gBAAeZ,EAAOC,EAAQY,GAMrC,QAASC,KACPd,EAAMc,SACLR,KAAK,WACJL,EAAOM,GAAG,gBAMd,QAASQ,GAAYC,EAAGC,GACtBC,EAAKC,QAAU,MAEXnB,EAAMoB,mBAAqBC,EAAgBC,SAASL,EAAQM,QAC9DP,EAAEQ,iBACFvB,EAAOM,GAAG,SACVW,EAAKC,QAAU,sCApBnB,GAAMD,GAAOV,IAEbU,GAAKO,WAAazB,EAAMoB,gBACxBF,EAAKC,QAAU,IASf,IAAME,IAAmB,YAAa,WAYtCR,GAAWa,IAAI,oBAAqBX,GAEpCG,EAAKJ,OAASA,EC3BhB,QAASa,SAAQC,EAAWjC,GAC1B,MAAO,IAAIiC,GAAajC,EAAjB,iBAA2CkC,GAAI,QACpDC,QAAUC,OAAQ,SCItB,QAASC,yBAAwBL,GAC/B,GAAMM,GAAezB,IAErByB,GAAaC,IAAMP,EAAQQ,QAI7B,QAASC,uBAAsBT,EAAS1B,GAKtC,QAASoC,KACPV,EAAQW,KAAKC,EAAiBC,aAAc,WAC1CvC,EAAOM,GAAG,kBANd,GAAMgC,GAAmB/B,IAEzB+B,GAAiBC,gBAQjBD,EAAiBF,OAASA,EAI5B,QAASI,wBAAuBd,EAAS1B,EAAQD,GAK/C,QAAS0C,KACPF,EAAaG,QAAQC,QAAQ,WAC3B3C,EAAOM,GAAG,kBANd,GAAMiC,GAAehC,IAErBgC,GAAaG,QAAUhB,EAAQkB,IAAI5C,EAAO6C,QAQ1CN,EAAaO,OAASL,EACtBF,EAAaf,WAAazB,EAAMoB,gBAIlC,QAAS4B,wBAAuBrB,EAAS1B,GAKvC,QAAS6B,KACPmB,EAAaN,QAAQO,QAAQ,WAC3BjD,EAAOM,GAAG,eAAgBN,EAAO6C,UANrC,GAAMG,GAAezC,IAErByC,GAAaN,QAAUhB,EAAQkB,IAAI5C,EAAO6C,QAQ1CtC,KAAKsB,OAASA,EAKhB,QAASqB,+BAA8BxB,EAAS3B,EAAOoD,GACrD,GAAMC,GAAsB7C,IAC5B6C,GAAoBC,gBACpBF,EAAKP,KAAKhB,GAAI7B,EAAMuD,aAAaC,KAAM,SAACnD,GACtCgD,EAAoBhD,KAAOA,IC/D/B,QAASoD,QAAOC,EAAgBC,GAC9BD,EACGE,MAAM,QACLC,IAAK,IACLC,YAAa,uBACbC,WAAY,2BAEbH,MAAM,cACLC,IAAK,SACLC,YAAa,6BACbC,WAAY,uCAEbH,MAAM,YACLC,IAAK,YACLC,YAAa,2BACbC,WAAY,mCAEbH,MAAM,SACLC,IAAK,SACLC,YAAa,wBACbC,WAAY,6BAEbH,MAAM,aACLC,IAAK,aACLC,YAAa,4BACbC,WAAY,qCAEbH,MAAM,aACLC,IAAK,kBACLC,YAAa,4BACbC,WAAY,qCAEbH,MAAM,gBACLC,IAAK,kBACLC,YAAa,+BACbC,WAAY,2CAEbH,MAAM,iBACLC,IAAK,YACLC,YAAa,gCACbC,WAAY,6CAEbH,MAAM,uBACLC,IAAK,YACLC,YAAa,sCACbC,WAAY,yDAEbH,MAAM,eACLC,IAAK,gBACLC,YAAa,8BACbC,WAAY,yCAEbH,MAAM,gBACLC,IAAK,gBACLC,YAAa,+BACbC,WAAY,2CAEbH,MAAM,gBACLC,IAAK,qBACLC,YAAa,+BACbC,WAAY,2CAEbH,MAAM,aACLC,IAAK,QACLC,YAAa,4BACbC,WAAY,qCAEbH,MAAM,YACLC,IAAK,YACLC,YAAa,2BACbC,WAAY,mCAEbH,MAAM,YACLC,IAAK,iBACLC,YAAa,2BACbC,WAAY,mCAGhBJ,EAAmBK,UAAU,UC/E/B,QAASC,KAAIrC,EAAWjC,GACtB,MAAO,IAAIiC,GAAajC,EAAjB,aAAuCkC,GAAI,QAChDC,QAAUC,OAAQ,SCCtB,QAASmC,qBAAoBD,GAC3B,GAAME,GAAY3D,IAElB2D,GAAUjC,IAAM+B,EAAI9B,QAItB,QAASiC,mBAAkBH,EAAKhE,GAK9B,QAASoC,KACP4B,EAAI3B,KAAK+B,EAAQC,IAAK,WACpBrE,EAAOM,GAAG,eANd,GAAM8D,GAAU7D,IAEhB6D,GAAQC,OAQRD,EAAQhC,OAASA,EAInB,QAASkC,oBAAmBN,EAAKhE,EAAQD,GAKvC,QAASwE,KACPC,EAASH,IAAI1B,QAAQ,WACnB3C,EAAOM,GAAG,eANd,GAAMkE,GAAWjE,IAEjBiE,GAASH,IAAML,EAAIpB,IAAI5C,EAAO6C,QAQ9B2B,EAAS1B,OAASyB,EAClBC,EAAShD,WAAazB,EAAMoB,gBAI9B,QAASsD,oBAAmBT,EAAKhE,GAK/B,QAAS6B,KACP6C,EAASL,IAAIpB,QAAQ,WACnBjD,EAAOM,GAAG,WAAYN,EAAO6C,UANjC,GAAM6B,GAAWnE,IAEjBmE,GAASL,IAAML,EAAIpB,IAAI5C,EAAO6C,QAQ9BtC,KAAKsB,OAASA,ECpDhB,QAASsB,MAAKxB,EAAWjC,GACvB,MAAO,IAAIiC,GAAajC,EAAjB,cAAwCkC,GAAI,QACjDC,QAAUC,OAAQ,SCGtB,QAAS6C,sBAAqBxB,GAC5B,GAAMyB,GAAarE,IAEnBqE,GAAW3C,IAAMkB,EAAKjB,QAIxB,QAAS2C,oBAAmB1B,EAAMnD,GAKhC,QAASoC,KACPe,EAAKd,KAAKyC,EAAS1E,KAAM,WACvBJ,EAAOM,GAAG,gBANd,GAAMwE,GAAWvE,IAEjBuE,GAAS1E,QAQT0E,EAAS1C,OAASA,EAIpB,QAAS2C,qBAAoB5B,EAAMnD,EAAQD,GAKzC,QAASiF,KACPC,EAAU7E,KAAKuC,QAAQ,WACrB3C,EAAOM,GAAG,gBANd,GAAM2E,GAAY1E,IAElB0E,GAAU7E,KAAO+C,EAAKP,IAAI5C,EAAO6C,QAQjCoC,EAAUnC,OAASkC,EACnBC,EAAUzD,WAAazB,EAAMoB,gBAI/B,QAAS+D,qBAAoB/B,EAAMnD,GAIjC,QAAS6B,KACPsD,QAAQC,IAAIC,EAAUjF,MACtBiF,EAAUjF,KAAK6C,QAAQ,WACrBjD,EAAOM,GAAG,YAAaN,EAAO6C,UANlC,GAAMwC,GAAY9E,IAElB8E,GAAUjF,KAAO+C,EAAKP,IAAI5C,EAAO6C,QAQjCtC,KAAKsB,OAASA,EAKhB,QAASyD,wBAAuBnC,EAAMnD,EAAQ0B,EAAS6D,EAAQxF,GAS7D,QAASyF,GAAO9C,GACd,MAAO+C,GAAarF,KAAKiD,aAAahC,SAASqB,EAAQd,IAGzD,QAAS8D,GAAOhD,GACd,GAAG8C,EAAO9C,GAAU,CAClB,GAAMiD,GAAMF,EAAarF,KAAKiD,aAAauC,UAAU,SAACC,GACpDA,IAAcnD,EAAQd,IAExB6D,GAAarF,KAAKiD,aAAayC,OAAOH,EAAK,OAE3CF,GAAarF,KAAKiD,aAAa0C,KAAKrD,EAAQd,IAIhD,QAASC,KACP4D,EAAarF,KAAK6C,QAAQ,WACxBjD,EAAOM,GAAG,gBAAiBN,EAAO6C,UAzBtC,GAAM4C,GAAelF,IACrBkF,GAAaxD,OAEbwD,EAAarF,KAAO+C,EAAKP,KAAMhB,GAAI7B,EAAMuD,aAAaC,MACtDkC,EAAaD,OAASA,EACtBC,EAAaC,OAASA,EAwBtBD,EAAa5D,OAASA,ET7FxBmE,QAAQC,OAAO,gBAAiB,aAAc,YAAa,eACxDC,SAAS,UAAW,6BACpBC,OAAO3G,MAEVA,KAAK4G,SAAW,gBAAiB,WCJjCJ,QAAQC,OAAO,gBACZnC,WAAW,qBAAsBhE,oBACjCgE,WAAW,kBAAmBtD,iBAEjCV,mBAAmBsG,SAAW,QAAS,UAgBvC5F,gBAAgB4F,SAAW,QAAS,UCpBpCJ,QAAQC,OAAO,gBACZnC,WAAW,iBAAkBnD,gBAEhCA,eAAeyF,SAAW,QAAS,SAAU,cCH7CJ,QAAQC,OAAO,gBACZI,QAAQ,UAAW3E,SAEtBA,QAAQ0E,SAAW,YAAa,WCHhCJ,QAAQC,OAAO,gBACZnC,WAAW,0BAA2B/B,yBACtC+B,WAAW,wBAAyB3B,uBACpC2B,WAAW,yBAA0BtB,wBACrCsB,WAAW,yBAA0Bf,wBACrCe,WAAW,gCAAiCZ,+BAI/CnB,wBAAwBqE,SAAW,WAOnCjE,sBAAsBiE,SAAW,UAAW,UAe5C5D,uBAAuB4D,SAAW,UAAW,SAAU,SAgBvDrD,uBAAuBqD,SAAW,UAAW,UAgB7ClD,8BAA8BkD,SAAW,UAAW,QAAS,QC/D7DJ,QACGC,OAAO,gBACPE,OAAO3C,QAEVA,OAAO4C,SAAW,iBAAkB,sBCJpCJ,QAAQC,OAAO,gBACZI,QAAQ,MAAOrC,KAElBA,IAAIoC,SAAW,YAAa,WCH5BJ,QAAQC,OAAO,gBACZnC,WAAW,sBAAuBG,qBAClCH,WAAW,oBAAqBK,mBAChCL,WAAW,qBAAsBQ,oBACjCR,WAAW,qBAAsBW,oBAEpCR,oBAAoBmC,SAAW,OAO/BjC,kBAAkBiC,SAAW,MAAO,UAepC9B,mBAAmB8B,SAAW,MAAO,SAAU,SAgB/C3B,mBAAmB2B,SAAW,MAAO,UC5CrCJ,QAAQC,OAAO,gBACZI,QAAQ,OAAQlD,MAEnBA,KAAKiD,SAAW,YAAa,WCH7BJ,QAAQC,OAAO,gBACZnC,WAAW,uBAAwBa,sBACnCb,WAAW,qBAAsBe,oBACjCf,WAAW,sBAAuBiB,qBAClCjB,WAAW,sBAAuBoB,qBAClCpB,WAAW,yBAA0BwB,wBAGxCX,qBAAqByB,SAAW,QAOhCvB,mBAAmBuB,SAAW,OAAQ,UAetCrB,oBAAoBqB,SAAW,OAAQ,SAAU,SAgBjDlB,oBAAoBkB,SAAW,OAAQ,UAgBvCd,uBAAuBc,SAAW,OAAQ,SAAU,UAAW,SAAU","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('usersIndex');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('finalProject')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  const protectedStates = ['usersEdit', 'usersNew'];\n\n  function secureState(e, toState) {\n    main.message = null;\n    // console.log(toState);\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You must be logged in to go there!';\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n","angular.module('finalProject')\n  .factory('Product', Product);\n\nProduct.$inject = ['$resource', 'API_URL'];\nfunction Product($resource, API_URL) {\n  return new $resource(`${API_URL}/products/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('ProductsIndexController', ProductsIndexController)\n  .controller('ProductsNewController', ProductsNewController)\n  .controller('ProductsShowController', ProductsShowController)\n  .controller('ProductsEditController', ProductsEditController)\n  .controller('ProductsPickedIndexController', ProductsPickedIndexController);\n\n\n\nProductsIndexController.$inject = ['Product'];\nfunction ProductsIndexController(Product) {\n  const productIndex = this;\n\n  productIndex.all = Product.query();\n}\n\nProductsNewController.$inject = ['Product', '$state'];\nfunction ProductsNewController(Product, $state) {\n  const productsShowsNew = this;\n\n  productsShowsNew.productsShow = {};\n\n  function create() {\n    Product.save(productsShowsNew.productsShow, () => {\n      $state.go('productIndex');\n    });\n  }\n\n  productsShowsNew.create = create;\n}\n\nProductsShowController.$inject = ['Product', '$state', '$auth'];\nfunction ProductsShowController(Product, $state, $auth) {\n  const productsShow = this;\n\n  productsShow.product = Product.get($state.params);\n\n  function deleteProduct() {\n    productsShow.product.$remove(() => {\n      $state.go('productIndex');\n    });\n  }\n\n  productsShow.delete = deleteProduct;\n  productsShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nProductsEditController.$inject = ['Product', '$state'];\nfunction ProductsEditController(Product, $state) {\n  const productsEdit = this;\n\n  productsEdit.product = Product.get($state.params);\n\n  function update() {\n    productsEdit.product.$update(() => {\n      $state.go('productsShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n\nProductsPickedIndexController.$inject = ['Product', '$auth', 'User'];\nfunction ProductsPickedIndexController(Product, $auth, User) {\n  const productsPickedIndex = this;\n  productsPickedIndex.productPicks = [];\n  User.get({id: $auth.getPayload()._id}, (user) => {\n    productsPickedIndex.user = user;\n  });\n}\n","angular\n  .module('finalProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('home', {\n      url: '/',\n      templateUrl: '/templates/home.html',\n      controller: 'MainController as home'\n    })\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('usersShow', {\n      url: '/users/:id',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    })\n    .state('usersProduct', {\n      url: '/users/products',\n      templateUrl: '/templates/usersProduct.html',\n      controller: 'UsersProductController as usersProduct'\n    })\n    .state('productsIndex', {\n      url: '/products',\n      templateUrl: '/templates/productsIndex.html',\n      controller: 'ProductsIndexController as productsIndex'\n    })\n    .state('productsPickedIndex', {\n      url: '/products',\n      templateUrl: '/templates/productsPickedIndex.html',\n      controller: 'ProductsPickedIndexController as productsPickedIndex'\n    })\n    .state('productsNew', {\n      url: '/products/New',\n      templateUrl: '/templates/productsNew.html',\n      controller: 'ProductsNewController as productsNew'\n    })\n    .state('productsShow', {\n      url: '/products/:id',\n      templateUrl: '/templates/productsShow.html',\n      controller: 'ProductsShowController as productsShow'\n    })\n    .state('productsEdit', {\n      url: '/products/:id/edit',\n      templateUrl: '/templates/productsEdit.html',\n      controller: 'ProductsEditController as productsEdit'\n    })\n    .state('tagsIndex', {\n      url: '/tags',\n      templateUrl: '/templates/tagsIndex.html',\n      controller: 'TagsIndexController as tagsIndex'\n    })\n    .state('tagsShow', {\n      url: '/tags/:id',\n      templateUrl: '/templates/tagsShow.html',\n      controller: 'TagsShowController as tagsShow'\n    })\n    .state('tagsEdit', {\n      url: '/tags/:id/edit',\n      templateUrl: '/templates/tagsEdit.html',\n      controller: 'TagsEditController as tagsEdit'\n    });\n\n  $urlRouterProvider.otherwise('/users');\n}\n","angular.module('finalProject')\n  .factory('Tag', Tag);\n\nTag.$inject = ['$resource', 'API_URL'];\nfunction Tag($resource, API_URL) {\n  return new $resource(`${API_URL}/tags/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('TagsIndexController', TagsIndexController)\n  .controller('TagsNewController', TagsNewController)\n  .controller('TagsShowController', TagsShowController)\n  .controller('TagsEditController', TagsEditController);\n\nTagsIndexController.$inject = ['Tag'];\nfunction TagsIndexController(Tag) {\n  const tagsIndex = this;\n\n  tagsIndex.all = Tag.query();\n}\n\nTagsNewController.$inject = ['Tag', '$state'];\nfunction TagsNewController(Tag, $state) {\n  const tagsNew = this;\n\n  tagsNew.tag = {};\n\n  function create() {\n    Tag.save(tagsNew.tag, () => {\n      $state.go('tagsIndex');\n    });\n  }\n\n  tagsNew.create = create;\n}\n\nTagsShowController.$inject = ['Tag', '$state', '$auth'];\nfunction TagsShowController(Tag, $state, $auth) {\n  const tagsShow = this;\n\n  tagsShow.tag = Tag.get($state.params);\n\n  function deleteTag() {\n    tagsShow.tag.$remove(() => {\n      $state.go('tagsIndex');\n    });\n  }\n\n  tagsShow.delete = deleteTag;\n  tagsShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nTagsEditController.$inject = ['Tag', '$state'];\nfunction TagsEditController(Tag, $state) {\n  const tagsEdit = this;\n\n  tagsEdit.tag = Tag.get($state.params);\n\n  function update() {\n    tagsEdit.tag.$update(() => {\n      $state.go('tagsShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UsersNewController', UsersNewController)\n  .controller('UsersShowController', UsersShowController)\n  .controller('UsersEditController', UsersEditController)\n  .controller('UsersProductController', UsersProductController);\n\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n}\n\nUsersNewController.$inject = ['User', '$state'];\nfunction UsersNewController(User, $state) {\n  const usersNew = this;\n\n  usersNew.user = {};\n\n  function create() {\n    User.save(usersNew.user, () => {\n      $state.go('usersIndex');\n    });\n  }\n\n  usersNew.create = create;\n}\n\nUsersShowController.$inject = ['User', '$state', '$auth'];\nfunction UsersShowController(User, $state, $auth) {\n  const usersShow = this;\n\n  usersShow.user = User.get($state.params);\n\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  usersShow.delete = deleteUser;\n  usersShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nUsersEditController.$inject = ['User', '$state'];\nfunction UsersEditController(User, $state) {\n  const usersEdit = this;\n\n  usersEdit.user = User.get($state.params);\n  function update() {\n    console.log(usersEdit.user);\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n\nUsersProductController.$inject = ['User', '$state', 'Product', '$scope', '$auth'];\nfunction UsersProductController(User, $state, Product, $scope, $auth) {\n  const usersProduct = this;\n  usersProduct.all = [];\n\n  usersProduct.user = User.get({ id: $auth.getPayload()._id });\n  usersProduct.isPick = isPick;\n  usersProduct.toggle = toggle;\n\n\n  function isPick(product) {\n    return usersProduct.user.productPicks.includes(product.id);\n  }\n\n  function toggle(product) {\n    if(isPick(product)) {\n      const idx = usersProduct.user.productPicks.findIndex((productId) => {\n        productId === product.id;\n      });\n      usersProduct.user.productPicks.splice(idx, 1);\n    } else {\n      usersProduct.user.productPicks.push(product.id);\n    }\n  }\n\n  function update() {\n    usersProduct.user.$update(() => {\n      $state.go('productsIndex', $state.params);\n    });\n  }\n\n  usersProduct.update = update;\n}\n"]}