{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/directives/googleMap.js","js/directives/googlePlaces.js","js/service/location.js","js/controllers/main.js","js/models/places.js","js/models/product.js","js/controllers/products.js","js/router.js","js/models/tag.js","js/controllers/tags.js","js/models/user.js","js/controllers/users.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","is_store","LoginController","login","credentials","successResponse","currentUser","data","console","log","id","googleMap","$window","restrict","replace","template","scope","markers","marker","center","link","$scope","element","clearMarkers","forEach","setMap","map","google","maps","Map","lat","latitude","lng","longitude","zoom","centerMarker","Marker","position","animation","Animation","BOUNCE","push","$watchGroup","pos","setPosition","$watch","storeMarker","DROP","setCenter","store","googlePlace","require","place","attrs","model","options","types","componentRestrictions","country","autocomplete","places","Autocomplete","addListener","getPlace","latLng","geometry","location","toJSON","google_place_id","place_id","address","formatted_address","phone_number","formatted_phone_number","icon","name","rating","website","$setViewValue","val","locationService","navigator","geolocation","getCurrentPosition","coords","MainController","$rootScope","User","logout","secureState","e","toState","main","message","isAuthenticated","get","getPayload","protectedStates","includes","preventDefault","addToSelectedProducts","product","selectedList","isLoggedIn","$on","Place","$resource","update","method","Product","ProductsIndexController","onOffer","is_available","$update","productsIndex","all","query","user_id","ProductsOfferedController","offOffer","$index","productsOffered","splice","ProductsNewController","create","productsNew","save","ProductsShowController","deleteProduct","productsShow","$remove","params","delete","ProductsEditController","productsEdit","$promise","end_time","Date","Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Tag","TagsIndexController","tagsIndex","TagsNewController","tagsNew","tag","TagsShowController","deleteTag","tagsShow","TagsEditController","tagsEdit","UsersIndexController","usersIndex","$apply","UsersNewController","usersNew","UsersShowController","$http","deleteUser","usersShow","UsersEditController","usersEdit","UserOffersController","userOffers","angular","module","constant","window","hostname","config","$inject","directive","service","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer' ])\n  .constant('API_URL', window.location.hostname === 'localhost' ? 'http://localhost:3000/api' : '//sobuylocal-api.herokuapp.com/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {\n    is_store: false\n  };\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then((successResponse) => {\n        $auth.currentUser = successResponse.data.user;\n        console.log('LoginController: successResponse:', successResponse);\n        if ($auth.currentUser.is_store){\n          $state.go('usersShow', { id: $auth.currentUser.id });\n        } else {\n          $state.go('usersIndex');\n        }\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('finalProject')\n .directive('googleMap', googleMap);\n // .directive('googleplace', googleplace);\n\n\ngoogleMap.$inject = ['$window'];\nfunction googleMap($window) {\n  return {\n    restrict: 'E',\n    replace: true,\n    template: '<div class=\"google-map\"></div>',\n    scope: {\n      markers: '=',\n      marker: '=',\n      center: '='\n    },\n    link: function($scope, element) {\n      // let directionsDisplay = null;\n      // const directionsService = new $window.google.maps.DirectionsService();\n      //\n      // directionsDisplay = new $window.google.maps.DirectionsRenderer();\n      const map = new $window.google.maps.Map(element[0], {\n        center: { lat: $scope.center.latitude, lng: $scope.center.longitude },\n        zoom: 14\n      });\n\n      let markers = [];\n      function clearMarkers() {\n        markers.forEach((marker) => {\n          marker.setMap(null);\n        });\n        markers = [];\n      }\n\n      const centerMarker = new $window.google.maps.Marker({\n        position: { lat: $scope.center.latitude, lng: $scope.center.longitude },\n        map: map,\n        animation: $window.google.maps.Animation.BOUNCE\n      });\n\n      markers.push(centerMarker);\n\n      $scope.$watchGroup(['center.latitude', 'center.longitude'], () => {\n        const pos = { lat: $scope.center.latitude, lng: $scope.center.longitude };\n        centerMarker.setPosition(pos);\n      });\n\n      // directionsDisplay.setMap(map);\n\n      // function calcRoute(origin, destination) {\n      //   var center.latitude,center.longitude = origin;\n      //   var store.latitude,store.longitude = destination;\n      //   var request = {\n      //     origin: start,\n      //     destination: end,\n      //     travelMode: 'DRIVING'\n      //   };\n      //   directionsService.route(request, function(result, status) {\n      //     if (status === 'OK') {\n      //       directionsDisplay.setDirections(result);\n      //     }\n      //   });\n      // }\n\n      // function computeDistanceBetween(origin) {\n\n      // const origin=center.latitude,center.longitude|store.latitude,store.longitude\n\n\n\n\n\n\n      // }\n      // origins=41.43206,-81.38992|-33.86748,151.20699\n      // computeDistanceBetween(from:LatLng, to:LatLng, radius?:number)\n\n\n      $scope.$watch('marker', () => {\n        if ($scope.marker) {\n          const pos = { lat: $scope.marker.latitude, lng: $scope.marker.longitude };\n          // clearMarkers();\n          const storeMarker = new $window.google.maps.Marker({\n            position: pos,\n            map: map,\n            animation: $window.google.maps.Animation.DROP\n          });\n\n          map.setCenter(pos);\n\n          markers.push(storeMarker);\n          // const bounds = new $window.google.maps.LatLngBounds();\n          // for (var i = 0; i < markers.length; i++) {\n          //   bounds.extend(markers[i].getPosition());\n          // }\n          // map.fitBounds(bounds);\n        }\n      }, true);\n\n      $scope.$watch('markers', () => {\n        if ($scope.markers) {\n          clearMarkers();\n          $scope.markers.forEach((store) => {\n           // Create a marker for each store\n            const marker = new $window.google.maps.Marker({\n              position: { lat: store.latitude, lng: store.longitude },\n              map: map,\n              animation: $window.google.maps.Animation.DROP\n            });\n\n            markers.push(marker);\n          });\n        }\n      }, true);\n    }\n  };\n}\n\n\n// googleplace.$inject = ['$window'];\n// function googleplace($window) {\n//   return {\n//     restrict: 'A',\n//     require: 'ngModel',\n//     scope: {\n//       request: '='\n//     },\n//     link: function(scope, element, attrs, model) {\n//       const options = {\n//         types: [],\n//         componentRestrictions: {}\n//       };\n//\n//       const autocomplete = new $window.google.maps.places.Autocomplete(element[0], options);\n//\n//       autocomplete.addListener('place_changed', () => {\n//         const place = autocomplete.getPlace();\n//         const latLng = place.geometry.location.toJSON();\n//         console.log('element', element.attr('id'));\n//         const id = element.attr('id');\n//         if(id === 'origin-input') {\n//           scope.request.location_lat = latLng.lat;\n//           scope.request.location_lng = latLng.lng;\n//         } else if (id === 'destination-input') {\n//           scope.request.destination_lat = latLng.lat;\n//           scope.request.destination_lng = latLng.lng;\n//         }\n//        // scope.request.lat = latLng.lat;\n//        // scope.request.lng = latLng.lng;\n//         model.$setViewValue(element.val());\n//       });\n//     }\n//   };\n// }\n","angular.module('finalProject')\n  .directive('googlePlace', googlePlace);\n\ngooglePlace.$inject = ['$window'];\n\nfunction googlePlace($window) {\n  return {\n    restrict: 'A',\n    require: 'ngModel',\n    scope: {\n      place: '='\n    },\n    link: function($scope, element, attrs, model) {\n      const options = {\n        types: [],\n        componentRestrictions: { country: 'GB' }\n      };\n\n      const autocomplete = new $window.google.maps.places.Autocomplete(element[0], options);\n\n      autocomplete.addListener('place_changed', () => {\n        const place = autocomplete.getPlace();\n        const latLng = place.geometry.location.toJSON();\n\n        console.log(place);\n\n        $scope.place.lat = latLng.lat;\n        $scope.place.lng = latLng.lng;\n        $scope.place.google_place_id = place.place_id;\n        $scope.place.address = place.formatted_address;\n        $scope.place.phone_number = place.formatted_phone_number;\n        $scope.place.icon = place.icon;\n        $scope.place.name = place.name;\n        $scope.place.rating = place.rating;\n        $scope.place.website = place.website;\n\n        model.$setViewValue(element.val());\n      });\n    }\n  };\n}\n","angular.module('finalProject')\n  .service('locationService', locationService);\n\nlocationService.$inject = ['$window'];\nfunction locationService($window) {\n  const locationService = this;\n  locationService.location = { latitude: 51.51, longitude: -0.08 };\n\n  $window.navigator.geolocation.getCurrentPosition((pos) => {\n    locationService.location.latitude = pos.coords.latitude;\n    locationService.location.longitude = pos.coords.longitude;\n  });\n\n  return locationService;\n}\n","angular.module('finalProject')\n  .controller('MainController', MainController)\n  ;\n\nMainController.$inject = ['$auth', '$state', '$rootScope', 'User', '$window'];\nfunction MainController($auth, $state, $rootScope, User, $window) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('home');\n    });\n  }\n\n  const protectedStates = ['usersEdit', 'usersNew'];\n\n  function secureState(e, toState) {\n    main.message = null;\n\n    if($auth.isAuthenticated()) {\n      main.currentUser = User.get({ id: $auth.getPayload().id });\n    }\n\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You must be logged in to go there!';\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n\n  main.selectedList = [];\n  // user selected prod list\n  function addToSelectedProducts(product) {\n    main.selectedList.push(product);\n    console.log('Basket: ', main.selectedList);\n  }\n  main.addToSelectedProducts = addToSelectedProducts;\n\n}\n","angular.module('finalProject')\n  .factory('Place', Place);\n\nPlace.$inject = ['$resource', 'API_URL'];\nfunction Place($resource, API_URL) {\n  return new $resource(`${API_URL}/places/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .factory('Product', Product);\n\nProduct.$inject = ['$resource', 'API_URL'];\nfunction Product($resource, API_URL) {\n  return new $resource(`${API_URL}/products/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('ProductsIndexController', ProductsIndexController)\n  .controller('ProductsOfferedController', ProductsOfferedController)\n  .controller('ProductsNewController', ProductsNewController)\n  .controller('ProductsShowController', ProductsShowController)\n  .controller('ProductsEditController', ProductsEditController);\n  // .controller('ProductsPickedIndexController', ProductsPickedIndexController);\n\n\n\nProductsIndexController.$inject = ['Product', '$auth'];\nfunction ProductsIndexController(Product, $auth) {\n  const productsIndex = this;\n\n  productsIndex.all = Product.query({ user_id: $auth.getPayload().id });\n\n  function onOffer(product) {\n    product.is_available = true;\n    product.$update();\n  }\n\n  productsIndex.onOffer = onOffer;\n}\n\nProductsOfferedController.$inject = ['Product', '$auth'];\nfunction ProductsOfferedController(Product, $auth) {\n  const productsOffered = this;\n\n  productsOffered.all = Product.query({ is_available: true, user_id: $auth.getPayload().id });\n\n  function offOffer(product, $index) {\n    product.is_available = false;\n    product.$update();\n\n    console.log($index);\n\n    productsOffered.all.splice($index, 1);\n  }\n\n  productsOffered.offOffer = offOffer;\n}\n\nProductsNewController.$inject = ['Product', '$state'];\nfunction ProductsNewController(Product, $state) {\n  const productsNew = this;\n\n  productsNew.product = {};\n\n  function create() {\n    console.log('creating with: ', productsNew.product);\n\n    Product.save(productsNew.product, () => {\n      $state.go('productsIndex');\n    });\n  }\n\n  productsNew.create = create;\n}\n\nProductsShowController.$inject = ['Product', '$state', '$auth'];\nfunction ProductsShowController(Product, $state, $auth) {\n  const productsShow = this;\n\n  productsShow.product = Product.get($state.params);\n\n  function deleteProduct() {\n    productsShow.product.$remove(() => {\n      $state.go('productsIndex');\n    });\n  }\n\n  productsShow.delete = deleteProduct;\n  productsShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nProductsEditController.$inject = ['Product', '$state'];\nfunction ProductsEditController(Product, $state) {\n  const productsEdit = this;\n\n  productsEdit.product = Product.get($state.params);\n  productsEdit.product.$promise.then(product => {\n    product.end_time = new Date(product.end_time);\n  });\n\n  function update() {\n    productsEdit.product.$update(() => {\n      $state.go('productsShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n\n// ProductsPickedIndexController.$inject = ['Product', '$auth', 'User'];\n// function ProductsPickedIndexController(Product, $auth, User) {\n//   const productsPickedIndex = this;\n//   productsPickedIndex.productPicks = [];\n//   // console.log($auth.getPayload());\n//   User.get({id: $auth.getPayload()._id}, (user) => {\n//     productsPickedIndex.user = user;\n//   });\n// }\n","angular\n  .module('finalProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('home', {\n      url: '/',\n      templateUrl: '/templates/home.html',\n      controller: 'MainController as home'\n    })\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('productsOffered', {\n      url: '/products/offered',\n      templateUrl: '/templates/productsOffered.html',\n      controller: 'ProductsOfferedController as productsOffered'\n    })\n    .state('userOffers', {\n      url: '/offers',\n      templateUrl: '/templates/userOffers.html',\n      controller: 'UserOffersController as userOffers'\n    })\n    .state('usersShow', {\n      url: '/users/:id',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    })\n    .state('productsIndex', {\n      url: '/products',\n      templateUrl: '/templates/productsIndex.html',\n      controller: 'ProductsIndexController as productsIndex'\n    })\n    .state('productsNew', {\n      url: '/products/new',\n      templateUrl: '/templates/productsNew.html',\n      controller: 'ProductsNewController as productsNew'\n    })\n    .state('productsShow', {\n      url: '/products/:id',\n      templateUrl: '/templates/productsShow.html',\n      controller: 'ProductsShowController as productsShow'\n    })\n    .state('productsEdit', {\n      url: '/products/:id/edit',\n      templateUrl: '/templates/productsEdit.html',\n      controller: 'ProductsEditController as productsEdit'\n    })\n    .state('tagsIndex', {\n      url: '/tags',\n      templateUrl: '/templates/tagsIndex.html',\n      controller: 'TagsIndexController as tagsIndex'\n    })\n    .state('tagsShow', {\n      url: '/tags/:id',\n      templateUrl: '/templates/tagsShow.html',\n      controller: 'TagsShowController as tagsShow'\n    })\n    .state('tagsEdit', {\n      url: '/tags/:id/edit',\n      templateUrl: '/templates/tagsEdit.html',\n      controller: 'TagsEditController as tagsEdit'\n    });\n\n  $urlRouterProvider.otherwise('/users');\n}\n","angular.module('finalProject')\n  .factory('Tag', Tag);\n\nTag.$inject = ['$resource', 'API_URL'];\nfunction Tag($resource, API_URL) {\n  return new $resource(`${API_URL}/tags/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('TagsIndexController', TagsIndexController)\n  .controller('TagsNewController', TagsNewController)\n  .controller('TagsShowController', TagsShowController)\n  .controller('TagsEditController', TagsEditController);\n\nTagsIndexController.$inject = ['Tag'];\nfunction TagsIndexController(Tag) {\n  const tagsIndex = this;\n\n  tagsIndex.all = Tag.query();\n}\n\nTagsNewController.$inject = ['Tag', '$state'];\nfunction TagsNewController(Tag, $state) {\n  const tagsNew = this;\n\n  tagsNew.tag = {};\n\n  function create() {\n    Tag.save(tagsNew.tag, () => {\n      $state.go('tagsIndex');\n    });\n  }\n\n  tagsNew.create = create;\n}\n\nTagsShowController.$inject = ['Tag', '$state', '$auth'];\nfunction TagsShowController(Tag, $state, $auth) {\n  const tagsShow = this;\n\n  tagsShow.tag = Tag.get($state.params);\n\n  function deleteTag() {\n    tagsShow.tag.$remove(() => {\n      $state.go('tagsIndex');\n    });\n  }\n\n  tagsShow.delete = deleteTag;\n  tagsShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nTagsEditController.$inject = ['Tag', '$state'];\nfunction TagsEditController(Tag, $state) {\n  const tagsEdit = this;\n\n  tagsEdit.tag = Tag.get($state.params);\n\n  function update() {\n    tagsEdit.tag.$update(() => {\n      $state.go('tagsShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UsersNewController', UsersNewController)\n  .controller('UsersShowController', UsersShowController)\n  .controller('UsersEditController', UsersEditController)\n  .controller('UserOffersController', UserOffersController);\n\nUsersIndexController.$inject = ['$auth', 'User', '$window', '$scope'];\nfunction UsersIndexController($auth, User, $window, $scope) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query({ is_store: true });\n\n  usersIndex.location = { latitude: 51.51, longitude: -0.08 };\n\n  $window.navigator.geolocation.getCurrentPosition((pos) => {\n    usersIndex.location.latitude = pos.coords.latitude;\n    usersIndex.location.longitude = pos.coords.longitude;\n\n    $scope.$apply();\n  });\n}\n\nUsersNewController.$inject = ['User', '$state'];\nfunction UsersNewController(User, $state) {\n  const usersNew = this;\n\n  usersNew.user = {};\n\n  function create() {\n    User.save(usersNew.user, () => {\n      $state.go('usersIndex');\n    });\n  }\n\n  usersNew.create = create;\n}\n\nUsersShowController.$inject = ['User', '$state', '$auth', '$scope', '$window', '$http'];\nfunction UsersShowController(User, $state, $auth, $scope, $window, $http) {\n  const usersShow = this;\n\n  usersShow.user = User.get($state.params);\n\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  usersShow.location = { latitude: 51.51, longitude: -0.08 };\n\n  $window.navigator.geolocation.getCurrentPosition((pos) => {\n    usersShow.location.latitude = pos.coords.latitude;\n    usersShow.location.longitude = pos.coords.longitude;\n\n    $scope.$apply();\n  });\n\n\n  usersShow.delete = deleteUser;\n  usersShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nUsersEditController.$inject = ['User', '$state'];\nfunction UsersEditController(User, $state) {\n  const usersEdit = this;\n\n  usersEdit.user = User.get($state.params);\n  function update() {\n    console.log(usersEdit.user);\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n\nUserOffersController.$inject = ['Product'];\nfunction UserOffersController(Product) {\n  const userOffers = this;\n\n  userOffers.all = Product.query({ is_available: true });\n}\n"]}