"use strict";function Auth(t,e){t.loginUrl=e+"/login",t.signupUrl=e+"/register",t.tokenPrefix=""}function RegisterController(t,e){function r(){t.signup(o.user).then(function(){e.go("login")})}var o=this;o.user={},o.submit=r}function LoginController(t,e){function r(){t.login(o.credentials).then(function(){e.go("usersIndex")})}var o=this;o.credentials={},o.submit=r}function MainController(t,e,r){function o(){t.logout().then(function(){e.go("usersIndex")})}function l(r,o){s.message=null,!t.isAuthenticated()&&a.includes(o.name)&&(r.preventDefault(),e.go("login"),s.message="You must be logged in to go there!")}function n(t){s.selectedList.push(t),console.log("Basket: ",s.selectedList)}var s=this;s.isLoggedIn=t.isAuthenticated,s.message=null;var a=["usersEdit","usersNew"];r.$on("$stateChangeStart",l),s.logout=o,s.selectedList=[],s.addToSelectedProducts=n}function Product(t,e){return new t(e+"/products/:id",{id:"@id"},{update:{method:"PUT"}})}function ProductsIndexController(t){var e=this;e.all=t.query()}function ProductsNewController(t,e){function r(){t.save(o.productsShow,function(){e.go("productIndex")})}var o=this;o.productsShow={},o.create=r}function ProductsShowController(t,e,r){function o(){l.product.$remove(function(){e.go("productIndex")})}var l=this;l.product=t.get(e.params),l.delete=o,l.isLoggedIn=r.isAuthenticated}function ProductsEditController(t,e){function r(){o.product.$update(function(){e.go("productsShow",e.params)})}var o=this;o.product=t.get(e.params),this.update=r}function Router(t,e){t.state("home",{url:"/",templateUrl:"/templates/home.html",controller:"MainController as home"}).state("usersIndex",{url:"/users",templateUrl:"/templates/usersIndex.html",controller:"UsersIndexController as usersIndex"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("login",{url:"/login",templateUrl:"/templates/login.html",controller:"LoginController as login"}).state("usersProduct",{url:"/users/products",templateUrl:"/templates/usersProduct.html"}).state("usersShow",{url:"/users/:id",templateUrl:"/templates/usersShow.html",controller:"UsersShowController as usersShow"}).state("usersEdit",{url:"/users/:id/edit",templateUrl:"/templates/usersEdit.html",controller:"UsersEditController as usersEdit"}).state("productsIndex",{url:"/products",templateUrl:"/templates/productsIndex.html",controller:"ProductsIndexController as productsIndex"}).state("productsPickedIndex",{url:"/products",templateUrl:"/templates/productsPickedIndex.html",controller:"ProductsPickedIndexController as productsPickedIndex"}).state("productsNew",{url:"/products/New",templateUrl:"/templates/productsNew.html",controller:"ProductsNewController as productsNew"}).state("productsShow",{url:"/products/:id",templateUrl:"/templates/productsShow.html",controller:"ProductsShowController as productsShow"}).state("productsEdit",{url:"/products/:id/edit",templateUrl:"/templates/productsEdit.html",controller:"ProductsEditController as productsEdit"}).state("tagsIndex",{url:"/tags",templateUrl:"/templates/tagsIndex.html",controller:"TagsIndexController as tagsIndex"}).state("tagsShow",{url:"/tags/:id",templateUrl:"/templates/tagsShow.html",controller:"TagsShowController as tagsShow"}).state("tagsEdit",{url:"/tags/:id/edit",templateUrl:"/templates/tagsEdit.html",controller:"TagsEditController as tagsEdit"}),e.otherwise("/users")}function Tag(t,e){return new t(e+"/tags/:id",{id:"@id"},{update:{method:"PUT"}})}function TagsIndexController(t){var e=this;e.all=t.query()}function TagsNewController(t,e){function r(){t.save(o.tag,function(){e.go("tagsIndex")})}var o=this;o.tag={},o.create=r}function TagsShowController(t,e,r){function o(){l.tag.$remove(function(){e.go("tagsIndex")})}var l=this;l.tag=t.get(e.params),l.delete=o,l.isLoggedIn=r.isAuthenticated}function TagsEditController(t,e){function r(){o.tag.$update(function(){e.go("tagsShow",e.params)})}var o=this;o.tag=t.get(e.params),this.update=r}function User(t,e){return new t(e+"/users/:id",{id:"@id"},{update:{method:"PUT"}})}function UsersIndexController(t){var e=this;e.all=t.query()}function UsersNewController(t,e){function r(){t.save(o.user,function(){e.go("usersIndex")})}var o=this;o.user={},o.create=r}function UsersShowController(t,e,r){function o(){l.user.$remove(function(){e.go("usersIndex")})}var l=this;l.user=t.get(e.params),l.delete=o,l.isLoggedIn=r.isAuthenticated}function UsersEditController(t,e){function r(){console.log(o.user),o.user.$update(function(){e.go("usersShow",e.params)})}var o=this;o.user=t.get(e.params),this.update=r}angular.module("finalProject",["ngResource","ui.router","satellizer"]).constant("API_URL","http://localhost:3000/api").config(Auth),Auth.$inject=["$authProvider","API_URL"],angular.module("finalProject").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state"],LoginController.$inject=["$auth","$state"],angular.module("finalProject").controller("MainController",MainController),MainController.$inject=["$auth","$state","$rootScope"],angular.module("finalProject").factory("Product",Product),Product.$inject=["$resource","API_URL"],angular.module("finalProject").controller("ProductsIndexController",ProductsIndexController).controller("ProductsNewController",ProductsNewController).controller("ProductsShowController",ProductsShowController).controller("ProductsEditController",ProductsEditController),ProductsIndexController.$inject=["Product"],ProductsNewController.$inject=["Product","$state"],ProductsShowController.$inject=["Product","$state","$auth"],ProductsEditController.$inject=["Product","$state"],angular.module("finalProject").config(Router),Router.$inject=["$stateProvider","$urlRouterProvider"],angular.module("finalProject").factory("Tag",Tag),Tag.$inject=["$resource","API_URL"],angular.module("finalProject").controller("TagsIndexController",TagsIndexController).controller("TagsNewController",TagsNewController).controller("TagsShowController",TagsShowController).controller("TagsEditController",TagsEditController),TagsIndexController.$inject=["Tag"],TagsNewController.$inject=["Tag","$state"],TagsShowController.$inject=["Tag","$state","$auth"],TagsEditController.$inject=["Tag","$state"],angular.module("finalProject").factory("User",User),User.$inject=["$resource","API_URL"],angular.module("finalProject").controller("UsersIndexController",UsersIndexController).controller("UsersNewController",UsersNewController).controller("UsersShowController",UsersShowController).controller("UsersEditController",UsersEditController),UsersIndexController.$inject=["User"],UsersNewController.$inject=["User","$state"],UsersShowController.$inject=["User","$state","$auth"],UsersEditController.$inject=["User","$state"];
//# sourceMappingURL=app.js.map
